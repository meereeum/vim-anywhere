#!/bin/bash
#
# vim-anywhere - use Vim whenever, wherever
# Author: Chris Knadler
# Homepage: https://www.github.com/cknadler/vim-anywhere
#
# Open a temporary file with Vim. Once Vim is closed, copy the contents of that
# file to the system clipboard.

###
# defs
###

err() { echo -e "$@" 1>&2; }

require_file_exists() {
  if [ ! -e $1 ]; then
    err "$1 does not exist. ${@:2}"
    exit 1
  fi
}

###
# opts
###

while getopts ":v" opt; do
  case "$opt" in
    v) set -x ;;
    \?) echo "Invalid option: -$OPTARG" >&2 ;;
  esac
done

###
# run
###
AW_PATH=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
TMPFILE_DIR=/tmp/vim-anywhere
TMPFILE=$TMPFILE_DIR/doc-$(date +"%y%m%d%H%M%S")
VIM_OPTS=--nofork

# Use ~/.gvimrc.min or ~/.vimrc.min if one exists
VIMRC_PATH=($HOME/.gvimrc.min $HOME/.vimrc.min)

for vimrc_path in "${VIMRC_PATH[@]}"; do
    if [ -f $vimrc_path ]; then
        VIM_OPTS+=" -u $vimrc_path"
        break
    fi
done

mkdir -p $TMPFILE_DIR
touch $TMPFILE

# Linux
if [[ $OSTYPE == "linux-gnu" ]]; then

  window=$( xdotool getactivewindow )
  chmod o-r $TMPFILE # Make file only readable by you
  text_editor="$(which gvim) $VIM_OPTS"

  # if $EVERYWHERE_EDITOR is specified, use that instead of gvim
  if [ -e $HOME/.bash_profile ]; then
      source $HOME/.bash_profile
      if env | grep -q "EVERYWHERE_EDITOR"; then
          text_editor="$EVERYWHERE_EDITOR"
      fi
  fi

  # copy active txt
  xdotool windowactivate --sync $window key ctrl+a
  xdotool windowactivate --sync $window key ctrl+c

  $text_editor $TMPFILE
  cat $TMPFILE | xclip -selection clipboard

  xdotool windowactivate --sync $window key ctrl+v
  # bash paste
  xdotool windowactivate --sync $window key --clearmodifiers shift+ctrl+v

# OSX
elif [[ $OSTYPE == "darwin"* ]]; then

  app=$( osascript $AW_PATH/script/current_app.scpt )
  mvim_path=$( cat $AW_PATH/.path )
  text_editor="$mvim_path $VIM_OPTS"

  # if $EVERYWHERE_EDITOR is specified, use that instead of mvim
  if [ -e $HOME/.bash_profile ]; then
    source $HOME/.bash_profile
    if env | grep -q "EVERYWHERE_EDITOR"; then
        text_editor="$EVERYWHERE_EDITOR"
    fi
  fi

  # copy active txt
  osascript -e "activate application \"$app\""
  osascript -e 'tell application "System Events" to keystroke "a" using command down'
  osascript -e 'tell application "System Events" to keystroke "c" using command down'

  $text_editor $TMPFILE

  # NOTE
  # Here we set LANG explicitly to be UTF-8 compatible when copying text. The only way that was explicitly
  # setting this to en_US.UTF-8. This may eventually cause issues with other languages. If so, just remove
  # the LANG setting.
  LANG=en_US.UTF-8 pbcopy < $TMPFILE
  osascript -e "activate application \"$app\""
  osascript -e 'tell application "System Events" to keystroke "v" using command down'

fi
